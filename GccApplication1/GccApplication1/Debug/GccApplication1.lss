
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000031a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000036e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000036e  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000003a0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000048  00000000  00000000  000003dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000067a  00000000  00000000  00000424  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005a2  00000000  00000000  00000a9e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002e5  00000000  00000000  00001040  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000058  00000000  00000000  00001328  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000031f  00000000  00000000  00001380  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000268  00000000  00000000  0000169f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000028  00000000  00000000  00001907  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 80 01 	call	0x300	; 0x300 <main>
  64:	0c 94 8b 01 	jmp	0x316	; 0x316 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <DIO_init>:
 */ 
#include "../registers.h"
#include "dio.h"

void DIO_init(uint8_t portNumber,uint8_t pinNumber,uint8_t direction){
	switch(portNumber){
  6c:	82 34       	cpi	r24, 0x42	; 66
  6e:	89 f1       	breq	.+98     	; 0xd2 <DIO_init+0x66>
  70:	18 f4       	brcc	.+6      	; 0x78 <DIO_init+0xc>
  72:	81 34       	cpi	r24, 0x41	; 65
  74:	41 f0       	breq	.+16     	; 0x86 <DIO_init+0x1a>
  76:	08 95       	ret
  78:	83 34       	cpi	r24, 0x43	; 67
  7a:	09 f4       	brne	.+2      	; 0x7e <DIO_init+0x12>
  7c:	50 c0       	rjmp	.+160    	; 0x11e <DIO_init+0xb2>
  7e:	84 34       	cpi	r24, 0x44	; 68
  80:	09 f4       	brne	.+2      	; 0x84 <DIO_init+0x18>
  82:	73 c0       	rjmp	.+230    	; 0x16a <DIO_init+0xfe>
  84:	08 95       	ret
		case PORT_A:{
			if(direction==IN){
  86:	41 11       	cpse	r20, r1
  88:	0c c0       	rjmp	.+24     	; 0xa2 <DIO_init+0x36>
				DDRA&=~(1<<pinNumber);
  8a:	2a b3       	in	r18, 0x1a	; 26
  8c:	81 e0       	ldi	r24, 0x01	; 1
  8e:	90 e0       	ldi	r25, 0x00	; 0
  90:	02 c0       	rjmp	.+4      	; 0x96 <DIO_init+0x2a>
  92:	88 0f       	add	r24, r24
  94:	99 1f       	adc	r25, r25
  96:	6a 95       	dec	r22
  98:	e2 f7       	brpl	.-8      	; 0x92 <DIO_init+0x26>
  9a:	80 95       	com	r24
  9c:	82 23       	and	r24, r18
  9e:	8a bb       	out	0x1a, r24	; 26
  a0:	08 95       	ret
			}
			else if(direction==OUT){
  a2:	41 30       	cpi	r20, 0x01	; 1
  a4:	59 f4       	brne	.+22     	; 0xbc <DIO_init+0x50>
				DDRA|=(1<<pinNumber);
  a6:	2a b3       	in	r18, 0x1a	; 26
  a8:	81 e0       	ldi	r24, 0x01	; 1
  aa:	90 e0       	ldi	r25, 0x00	; 0
  ac:	02 c0       	rjmp	.+4      	; 0xb2 <DIO_init+0x46>
  ae:	88 0f       	add	r24, r24
  b0:	99 1f       	adc	r25, r25
  b2:	6a 95       	dec	r22
  b4:	e2 f7       	brpl	.-8      	; 0xae <DIO_init+0x42>
  b6:	82 2b       	or	r24, r18
  b8:	8a bb       	out	0x1a, r24	; 26
  ba:	08 95       	ret
			}
			else{
				DDRA|=(1<<pinNumber);
  bc:	2a b3       	in	r18, 0x1a	; 26
  be:	81 e0       	ldi	r24, 0x01	; 1
  c0:	90 e0       	ldi	r25, 0x00	; 0
  c2:	02 c0       	rjmp	.+4      	; 0xc8 <DIO_init+0x5c>
  c4:	88 0f       	add	r24, r24
  c6:	99 1f       	adc	r25, r25
  c8:	6a 95       	dec	r22
  ca:	e2 f7       	brpl	.-8      	; 0xc4 <DIO_init+0x58>
  cc:	82 2b       	or	r24, r18
  ce:	8a bb       	out	0x1a, r24	; 26
  d0:	08 95       	ret
			}
		}
		break;
		case PORT_B:{
			if(direction==IN){
  d2:	41 11       	cpse	r20, r1
  d4:	0c c0       	rjmp	.+24     	; 0xee <DIO_init+0x82>
				DDRB&=~(1<<pinNumber);
  d6:	27 b3       	in	r18, 0x17	; 23
  d8:	81 e0       	ldi	r24, 0x01	; 1
  da:	90 e0       	ldi	r25, 0x00	; 0
  dc:	02 c0       	rjmp	.+4      	; 0xe2 <DIO_init+0x76>
  de:	88 0f       	add	r24, r24
  e0:	99 1f       	adc	r25, r25
  e2:	6a 95       	dec	r22
  e4:	e2 f7       	brpl	.-8      	; 0xde <DIO_init+0x72>
  e6:	80 95       	com	r24
  e8:	82 23       	and	r24, r18
  ea:	87 bb       	out	0x17, r24	; 23
  ec:	08 95       	ret
			}
			else if(direction==OUT){
  ee:	41 30       	cpi	r20, 0x01	; 1
  f0:	59 f4       	brne	.+22     	; 0x108 <DIO_init+0x9c>
				DDRB|=(1<<pinNumber);
  f2:	27 b3       	in	r18, 0x17	; 23
  f4:	81 e0       	ldi	r24, 0x01	; 1
  f6:	90 e0       	ldi	r25, 0x00	; 0
  f8:	02 c0       	rjmp	.+4      	; 0xfe <DIO_init+0x92>
  fa:	88 0f       	add	r24, r24
  fc:	99 1f       	adc	r25, r25
  fe:	6a 95       	dec	r22
 100:	e2 f7       	brpl	.-8      	; 0xfa <DIO_init+0x8e>
 102:	82 2b       	or	r24, r18
 104:	87 bb       	out	0x17, r24	; 23
 106:	08 95       	ret
			}
			else{
				DDRB|=(1<<pinNumber);
 108:	27 b3       	in	r18, 0x17	; 23
 10a:	81 e0       	ldi	r24, 0x01	; 1
 10c:	90 e0       	ldi	r25, 0x00	; 0
 10e:	02 c0       	rjmp	.+4      	; 0x114 <DIO_init+0xa8>
 110:	88 0f       	add	r24, r24
 112:	99 1f       	adc	r25, r25
 114:	6a 95       	dec	r22
 116:	e2 f7       	brpl	.-8      	; 0x110 <DIO_init+0xa4>
 118:	82 2b       	or	r24, r18
 11a:	87 bb       	out	0x17, r24	; 23
 11c:	08 95       	ret
			}
		}
		break;
		case PORT_C:{
			if(direction==IN){
 11e:	41 11       	cpse	r20, r1
 120:	0c c0       	rjmp	.+24     	; 0x13a <DIO_init+0xce>
				DDRC&=~(1<<pinNumber);
 122:	24 b3       	in	r18, 0x14	; 20
 124:	81 e0       	ldi	r24, 0x01	; 1
 126:	90 e0       	ldi	r25, 0x00	; 0
 128:	02 c0       	rjmp	.+4      	; 0x12e <DIO_init+0xc2>
 12a:	88 0f       	add	r24, r24
 12c:	99 1f       	adc	r25, r25
 12e:	6a 95       	dec	r22
 130:	e2 f7       	brpl	.-8      	; 0x12a <DIO_init+0xbe>
 132:	80 95       	com	r24
 134:	82 23       	and	r24, r18
 136:	84 bb       	out	0x14, r24	; 20
 138:	08 95       	ret
			}
			else if(direction==OUT){
 13a:	41 30       	cpi	r20, 0x01	; 1
 13c:	59 f4       	brne	.+22     	; 0x154 <DIO_init+0xe8>
				DDRC|=(1<<pinNumber);
 13e:	24 b3       	in	r18, 0x14	; 20
 140:	81 e0       	ldi	r24, 0x01	; 1
 142:	90 e0       	ldi	r25, 0x00	; 0
 144:	02 c0       	rjmp	.+4      	; 0x14a <DIO_init+0xde>
 146:	88 0f       	add	r24, r24
 148:	99 1f       	adc	r25, r25
 14a:	6a 95       	dec	r22
 14c:	e2 f7       	brpl	.-8      	; 0x146 <DIO_init+0xda>
 14e:	82 2b       	or	r24, r18
 150:	84 bb       	out	0x14, r24	; 20
 152:	08 95       	ret
			}
			else{
				DDRC|=(1<<pinNumber);
 154:	24 b3       	in	r18, 0x14	; 20
 156:	81 e0       	ldi	r24, 0x01	; 1
 158:	90 e0       	ldi	r25, 0x00	; 0
 15a:	02 c0       	rjmp	.+4      	; 0x160 <DIO_init+0xf4>
 15c:	88 0f       	add	r24, r24
 15e:	99 1f       	adc	r25, r25
 160:	6a 95       	dec	r22
 162:	e2 f7       	brpl	.-8      	; 0x15c <DIO_init+0xf0>
 164:	82 2b       	or	r24, r18
 166:	84 bb       	out	0x14, r24	; 20
 168:	08 95       	ret
			}
		}
		break;
		case PORT_D:{
			if(direction==IN){
 16a:	41 11       	cpse	r20, r1
 16c:	0c c0       	rjmp	.+24     	; 0x186 <DIO_init+0x11a>
				DDRD&=~(1<<pinNumber);
 16e:	21 b3       	in	r18, 0x11	; 17
 170:	81 e0       	ldi	r24, 0x01	; 1
 172:	90 e0       	ldi	r25, 0x00	; 0
 174:	02 c0       	rjmp	.+4      	; 0x17a <DIO_init+0x10e>
 176:	88 0f       	add	r24, r24
 178:	99 1f       	adc	r25, r25
 17a:	6a 95       	dec	r22
 17c:	e2 f7       	brpl	.-8      	; 0x176 <DIO_init+0x10a>
 17e:	80 95       	com	r24
 180:	82 23       	and	r24, r18
 182:	81 bb       	out	0x11, r24	; 17
 184:	08 95       	ret
			}
			else if(direction==OUT){
 186:	41 30       	cpi	r20, 0x01	; 1
 188:	59 f4       	brne	.+22     	; 0x1a0 <DIO_init+0x134>
				DDRD|=(1<<pinNumber);
 18a:	21 b3       	in	r18, 0x11	; 17
 18c:	81 e0       	ldi	r24, 0x01	; 1
 18e:	90 e0       	ldi	r25, 0x00	; 0
 190:	02 c0       	rjmp	.+4      	; 0x196 <DIO_init+0x12a>
 192:	88 0f       	add	r24, r24
 194:	99 1f       	adc	r25, r25
 196:	6a 95       	dec	r22
 198:	e2 f7       	brpl	.-8      	; 0x192 <DIO_init+0x126>
 19a:	82 2b       	or	r24, r18
 19c:	81 bb       	out	0x11, r24	; 17
 19e:	08 95       	ret
			}
			else{
				DDRD|=(1<<pinNumber);
 1a0:	21 b3       	in	r18, 0x11	; 17
 1a2:	81 e0       	ldi	r24, 0x01	; 1
 1a4:	90 e0       	ldi	r25, 0x00	; 0
 1a6:	02 c0       	rjmp	.+4      	; 0x1ac <DIO_init+0x140>
 1a8:	88 0f       	add	r24, r24
 1aa:	99 1f       	adc	r25, r25
 1ac:	6a 95       	dec	r22
 1ae:	e2 f7       	brpl	.-8      	; 0x1a8 <DIO_init+0x13c>
 1b0:	82 2b       	or	r24, r18
 1b2:	81 bb       	out	0x11, r24	; 17
 1b4:	08 95       	ret

000001b6 <DIO_write>:
		}	
		break;
	}
}
void DIO_write(uint8_t portNumber,uint8_t pinNumber,uint8_t value){
	switch(portNumber){
 1b6:	82 34       	cpi	r24, 0x42	; 66
 1b8:	89 f1       	breq	.+98     	; 0x21c <DIO_write+0x66>
 1ba:	18 f4       	brcc	.+6      	; 0x1c2 <DIO_write+0xc>
 1bc:	81 34       	cpi	r24, 0x41	; 65
 1be:	41 f0       	breq	.+16     	; 0x1d0 <DIO_write+0x1a>
 1c0:	08 95       	ret
 1c2:	83 34       	cpi	r24, 0x43	; 67
 1c4:	09 f4       	brne	.+2      	; 0x1c8 <DIO_write+0x12>
 1c6:	50 c0       	rjmp	.+160    	; 0x268 <DIO_write+0xb2>
 1c8:	84 34       	cpi	r24, 0x44	; 68
 1ca:	09 f4       	brne	.+2      	; 0x1ce <DIO_write+0x18>
 1cc:	73 c0       	rjmp	.+230    	; 0x2b4 <DIO_write+0xfe>
 1ce:	08 95       	ret
		case PORT_A:{
			if(value==LOW){
 1d0:	41 11       	cpse	r20, r1
 1d2:	0c c0       	rjmp	.+24     	; 0x1ec <DIO_write+0x36>
				PORTA&=~(1<<pinNumber);
 1d4:	2b b3       	in	r18, 0x1b	; 27
 1d6:	81 e0       	ldi	r24, 0x01	; 1
 1d8:	90 e0       	ldi	r25, 0x00	; 0
 1da:	02 c0       	rjmp	.+4      	; 0x1e0 <DIO_write+0x2a>
 1dc:	88 0f       	add	r24, r24
 1de:	99 1f       	adc	r25, r25
 1e0:	6a 95       	dec	r22
 1e2:	e2 f7       	brpl	.-8      	; 0x1dc <DIO_write+0x26>
 1e4:	80 95       	com	r24
 1e6:	82 23       	and	r24, r18
 1e8:	8b bb       	out	0x1b, r24	; 27
 1ea:	08 95       	ret
			}
			else if(value==HIGH){
 1ec:	41 30       	cpi	r20, 0x01	; 1
 1ee:	59 f4       	brne	.+22     	; 0x206 <DIO_write+0x50>
				PORTA|=(1<<pinNumber);
 1f0:	2b b3       	in	r18, 0x1b	; 27
 1f2:	81 e0       	ldi	r24, 0x01	; 1
 1f4:	90 e0       	ldi	r25, 0x00	; 0
 1f6:	02 c0       	rjmp	.+4      	; 0x1fc <DIO_write+0x46>
 1f8:	88 0f       	add	r24, r24
 1fa:	99 1f       	adc	r25, r25
 1fc:	6a 95       	dec	r22
 1fe:	e2 f7       	brpl	.-8      	; 0x1f8 <DIO_write+0x42>
 200:	82 2b       	or	r24, r18
 202:	8b bb       	out	0x1b, r24	; 27
 204:	08 95       	ret
			}
			else{
				PORTA|=(1<<pinNumber);
 206:	2b b3       	in	r18, 0x1b	; 27
 208:	81 e0       	ldi	r24, 0x01	; 1
 20a:	90 e0       	ldi	r25, 0x00	; 0
 20c:	02 c0       	rjmp	.+4      	; 0x212 <DIO_write+0x5c>
 20e:	88 0f       	add	r24, r24
 210:	99 1f       	adc	r25, r25
 212:	6a 95       	dec	r22
 214:	e2 f7       	brpl	.-8      	; 0x20e <DIO_write+0x58>
 216:	82 2b       	or	r24, r18
 218:	8b bb       	out	0x1b, r24	; 27
 21a:	08 95       	ret
			}
		}
		break;
		case PORT_B:{
			if(value==LOW){
 21c:	41 11       	cpse	r20, r1
 21e:	0c c0       	rjmp	.+24     	; 0x238 <DIO_write+0x82>
				PORTB&=~(1<<pinNumber);
 220:	28 b3       	in	r18, 0x18	; 24
 222:	81 e0       	ldi	r24, 0x01	; 1
 224:	90 e0       	ldi	r25, 0x00	; 0
 226:	02 c0       	rjmp	.+4      	; 0x22c <DIO_write+0x76>
 228:	88 0f       	add	r24, r24
 22a:	99 1f       	adc	r25, r25
 22c:	6a 95       	dec	r22
 22e:	e2 f7       	brpl	.-8      	; 0x228 <DIO_write+0x72>
 230:	80 95       	com	r24
 232:	82 23       	and	r24, r18
 234:	88 bb       	out	0x18, r24	; 24
 236:	08 95       	ret
			}
			else if(value==HIGH){
 238:	41 30       	cpi	r20, 0x01	; 1
 23a:	59 f4       	brne	.+22     	; 0x252 <DIO_write+0x9c>
				PORTB|=(1<<pinNumber);
 23c:	28 b3       	in	r18, 0x18	; 24
 23e:	81 e0       	ldi	r24, 0x01	; 1
 240:	90 e0       	ldi	r25, 0x00	; 0
 242:	02 c0       	rjmp	.+4      	; 0x248 <DIO_write+0x92>
 244:	88 0f       	add	r24, r24
 246:	99 1f       	adc	r25, r25
 248:	6a 95       	dec	r22
 24a:	e2 f7       	brpl	.-8      	; 0x244 <DIO_write+0x8e>
 24c:	82 2b       	or	r24, r18
 24e:	88 bb       	out	0x18, r24	; 24
 250:	08 95       	ret
			}
			else{
				PORTB|=(1<<pinNumber);
 252:	28 b3       	in	r18, 0x18	; 24
 254:	81 e0       	ldi	r24, 0x01	; 1
 256:	90 e0       	ldi	r25, 0x00	; 0
 258:	02 c0       	rjmp	.+4      	; 0x25e <DIO_write+0xa8>
 25a:	88 0f       	add	r24, r24
 25c:	99 1f       	adc	r25, r25
 25e:	6a 95       	dec	r22
 260:	e2 f7       	brpl	.-8      	; 0x25a <DIO_write+0xa4>
 262:	82 2b       	or	r24, r18
 264:	88 bb       	out	0x18, r24	; 24
 266:	08 95       	ret
			}
		}
		break;
		case PORT_C:{
			if(value==LOW){
 268:	41 11       	cpse	r20, r1
 26a:	0c c0       	rjmp	.+24     	; 0x284 <DIO_write+0xce>
				PORTC&=~(1<<pinNumber);
 26c:	25 b3       	in	r18, 0x15	; 21
 26e:	81 e0       	ldi	r24, 0x01	; 1
 270:	90 e0       	ldi	r25, 0x00	; 0
 272:	02 c0       	rjmp	.+4      	; 0x278 <DIO_write+0xc2>
 274:	88 0f       	add	r24, r24
 276:	99 1f       	adc	r25, r25
 278:	6a 95       	dec	r22
 27a:	e2 f7       	brpl	.-8      	; 0x274 <DIO_write+0xbe>
 27c:	80 95       	com	r24
 27e:	82 23       	and	r24, r18
 280:	85 bb       	out	0x15, r24	; 21
 282:	08 95       	ret
			}
			else if(value==HIGH){
 284:	41 30       	cpi	r20, 0x01	; 1
 286:	59 f4       	brne	.+22     	; 0x29e <DIO_write+0xe8>
				PORTC|=(1<<pinNumber);
 288:	25 b3       	in	r18, 0x15	; 21
 28a:	81 e0       	ldi	r24, 0x01	; 1
 28c:	90 e0       	ldi	r25, 0x00	; 0
 28e:	02 c0       	rjmp	.+4      	; 0x294 <DIO_write+0xde>
 290:	88 0f       	add	r24, r24
 292:	99 1f       	adc	r25, r25
 294:	6a 95       	dec	r22
 296:	e2 f7       	brpl	.-8      	; 0x290 <DIO_write+0xda>
 298:	82 2b       	or	r24, r18
 29a:	85 bb       	out	0x15, r24	; 21
 29c:	08 95       	ret
			}
			else{
				PORTC|=(1<<pinNumber);
 29e:	25 b3       	in	r18, 0x15	; 21
 2a0:	81 e0       	ldi	r24, 0x01	; 1
 2a2:	90 e0       	ldi	r25, 0x00	; 0
 2a4:	02 c0       	rjmp	.+4      	; 0x2aa <DIO_write+0xf4>
 2a6:	88 0f       	add	r24, r24
 2a8:	99 1f       	adc	r25, r25
 2aa:	6a 95       	dec	r22
 2ac:	e2 f7       	brpl	.-8      	; 0x2a6 <DIO_write+0xf0>
 2ae:	82 2b       	or	r24, r18
 2b0:	85 bb       	out	0x15, r24	; 21
 2b2:	08 95       	ret
			}
		}
		break;
		case PORT_D:{
			if(value==LOW){
 2b4:	41 11       	cpse	r20, r1
 2b6:	0c c0       	rjmp	.+24     	; 0x2d0 <DIO_write+0x11a>
				PORTD&=~(1<<pinNumber);
 2b8:	22 b3       	in	r18, 0x12	; 18
 2ba:	81 e0       	ldi	r24, 0x01	; 1
 2bc:	90 e0       	ldi	r25, 0x00	; 0
 2be:	02 c0       	rjmp	.+4      	; 0x2c4 <DIO_write+0x10e>
 2c0:	88 0f       	add	r24, r24
 2c2:	99 1f       	adc	r25, r25
 2c4:	6a 95       	dec	r22
 2c6:	e2 f7       	brpl	.-8      	; 0x2c0 <DIO_write+0x10a>
 2c8:	80 95       	com	r24
 2ca:	82 23       	and	r24, r18
 2cc:	82 bb       	out	0x12, r24	; 18
 2ce:	08 95       	ret
			}
			else if(value==HIGH){
 2d0:	41 30       	cpi	r20, 0x01	; 1
 2d2:	59 f4       	brne	.+22     	; 0x2ea <DIO_write+0x134>
				PORTD|=(1<<pinNumber);
 2d4:	22 b3       	in	r18, 0x12	; 18
 2d6:	81 e0       	ldi	r24, 0x01	; 1
 2d8:	90 e0       	ldi	r25, 0x00	; 0
 2da:	02 c0       	rjmp	.+4      	; 0x2e0 <DIO_write+0x12a>
 2dc:	88 0f       	add	r24, r24
 2de:	99 1f       	adc	r25, r25
 2e0:	6a 95       	dec	r22
 2e2:	e2 f7       	brpl	.-8      	; 0x2dc <DIO_write+0x126>
 2e4:	82 2b       	or	r24, r18
 2e6:	82 bb       	out	0x12, r24	; 18
 2e8:	08 95       	ret
			}
			else{
				PORTD|=(1<<pinNumber);
 2ea:	22 b3       	in	r18, 0x12	; 18
 2ec:	81 e0       	ldi	r24, 0x01	; 1
 2ee:	90 e0       	ldi	r25, 0x00	; 0
 2f0:	02 c0       	rjmp	.+4      	; 0x2f6 <DIO_write+0x140>
 2f2:	88 0f       	add	r24, r24
 2f4:	99 1f       	adc	r25, r25
 2f6:	6a 95       	dec	r22
 2f8:	e2 f7       	brpl	.-8      	; 0x2f2 <DIO_write+0x13c>
 2fa:	82 2b       	or	r24, r18
 2fc:	82 bb       	out	0x12, r24	; 18
 2fe:	08 95       	ret

00000300 <main>:
#define F_CPU 1000000U //1MHz
// delay unit is ms
#include <util/delay.h>

int main(void){
	DIO_init(PORT_A,4,OUT);
 300:	41 e0       	ldi	r20, 0x01	; 1
 302:	64 e0       	ldi	r22, 0x04	; 4
 304:	81 e4       	ldi	r24, 0x41	; 65
 306:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_init>
	while(1){
		DIO_write(PORT_A,4,HIGH);
 30a:	41 e0       	ldi	r20, 0x01	; 1
 30c:	64 e0       	ldi	r22, 0x04	; 4
 30e:	81 e4       	ldi	r24, 0x41	; 65
 310:	0e 94 db 00 	call	0x1b6	; 0x1b6 <DIO_write>
 314:	fa cf       	rjmp	.-12     	; 0x30a <main+0xa>

00000316 <_exit>:
 316:	f8 94       	cli

00000318 <__stop_program>:
 318:	ff cf       	rjmp	.-2      	; 0x318 <__stop_program>
